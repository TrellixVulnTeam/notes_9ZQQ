const express = require('express');
const app = express();
const mongoose = require('mongoose');
const bodyParser =  require('body-parser');
const validator = require('validator');



app.use(bodyParser.urlencoded({extended : true}));

const db_string = "mongodb://127.0.0.1:27017/myDB";

mongoose.connect(db_string, { useNewUrlParser : true, useUnifiedTopology : true}, (err)=> {
    if(!err)
        console.log("DB connected")
})


// shcema define
const userSchema = new mongoose.Schema({
    name :{
        type : String,
    },
    email : {
        type : String,
    },
    password : {
        type : String,
    }
});


// validation 


const isEmpty=(value) =>{
        value === undefined || value === null 
    
} 


function validateRegisterInput(data){
    let errors = {};

    if(!validator.isLength(data.name, {min : 2, max : 30})){
        errors.name = "Name must be between 2 and 30 characters"
    }


    return{
        errors,
        isValid : isEmpty(errors)

    }
}





const userModel = mongoose.model('userModel', userSchema);


app.post('/register', (req, res)=> {

    const {errors, isValid} = validateRegisterInput(req.body);
   
    if(!isValid) return res.send(errors);

    const newUser = new userModel({
        name: req.body.name,
        email: req.body.email,
        password : req.body.password
    });

    newUser.save((err,user)=> {
        if(err){
            
            res.send(errors)
             
        }else{
            res.send(user);
        }
    })          
})


app.get('/', (req, res)=> {
    res.send("helllo")
})



app.listen(3000, ()=> {
    console.log('server is running...')
})
