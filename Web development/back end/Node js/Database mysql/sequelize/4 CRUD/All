const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const {Sequelize, DataTypes} = require('sequelize');



app.use(bodyParser.urlencoded({extended : true}));
app.use(bodyParser.json());


const DBconnection = new Sequelize(
    'node',
    'root',
    '',{
        host : "localhost",
        dialect : 'mysql',
    }
)


DBconnection.authenticate()
    .then(()=>{
        console.log("DB Connected")
    }).catch((err)=>{
        console.log(err);
    })


 const UserModel = DBconnection.define('user',{
    name : DataTypes.STRING,
    email : DataTypes.STRING
 })

// keep update table
 UserModel.sync({alter : true})
    .then(()=>{
        console.log("Table Created")
    })

 


app.post('/post', async (req, res)=>{
    const newUser = UserModel.build({
        name : req.body.name,
        email : req.body.email
    })

    await newUser.save()
    res.send("User have been saved")
})


app.get('/get', async(req, res)=>{
    let data = await UserModel.findAll();
    res.send(data)
})

app.get('/get/:id', async (req, res)=>{
    let data = await UserModel.findOne({
        where : {
            id : req.params.id
        }
    })
    res.send(data);
})


app.delete('/remove/:id', async(req, res)=>{
    try{
        await UserModel.destroy({
            where : {
                id : req.params.id
            }
        })
        res.send("deleted")
    }catch(err){
        res.send("not found")
    }
   
    
    // .then(()=>{
    //     res.send("deleted")
    // })
    // .catch(err =>{
    //     res.send(err)
    // })
    
})


app.listen(3000, ()=>{
    console.log("server is running...")
})
